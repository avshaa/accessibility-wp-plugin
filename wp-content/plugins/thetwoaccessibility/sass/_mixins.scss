// mixins

@mixin rotate($deg) {
	-moz-transform: rotate($deg);
	-ms-transform: rotate($deg);
	-webkit-transform: rotate($deg);
	transform: rotate($deg);
}

@mixin base-transition($sec) {
	-webkit-transition: all $sec ease-out;
	transition: all $sec ease-out;
}

@mixin base-transition-time($sec, $time) {
	-webkit-transition: all $sec ease-out $time;
	transition: all $sec ease-out $time;
}

@mixin cubic {
	transition: opacity 0s cubic-bezier(0.165, 0.84, 0.44, 1) 0s;
	-webkit-transition: opacity 0s cubic-bezier(0.165, 0.84, 0.44, 1) 0s;
}

@mixin scale($i) {
	transform: scale($i) !important;
	-webkit-transform: scale($i) !important;
}

@mixin scaleX($i) {
	transform: scaleX($i) !important;
	-webkit-transform: scaleX($i) !important;
}

@mixin scaleY($i) {
	transform: scaleY($i) !important;
	-webkit-transform: scaleY($i) !important;
}

@mixin rotate($i) {
	transform: rotate($i) !important;
	-webkit-transform: rotate($i) !important;
}

@mixin translateX($i) {
	transform: translateX($i) !important;
	-webkit-transform: translateX($i) !important;
}

@mixin translateY($i) {
	transform: translateY($i) !important;
	-webkit-transform: translateY($i) !important;
}

@mixin circle($width, $border-width, $color) {
	width: $width;
	height: $width;
	border-radius: 50%;
	border: $border-width solid $color;
	text-align: center;
	line-height: $width - $border-width * 2 !important;
	vertical-align: middle !important;
}

@mixin bg {
	-webkit-background-size: cover !important;
	-moz-background-size: cover !important;
	-o-background-size: cover !important;
	background-size: cover !important;
	background-position: center center !important;
	background-repeat: no-repeat !important;
}

@mixin absolute-full {
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
}

@mixin absolute-center($width, $height) {
	position: absolute;
	width: $width;
	height: $height;
	left: 50%;
	margin-left: -1 * $width / 2;
	top: 50%;
	margin-top: -1 * $height / 2;
}

@mixin fixed-full {
	position: fixed;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	z-index: 9999999;
}

@mixin relative-center {
	margin-left: auto;
	margin-right: auto;
}

@mixin box_shadow($level) {
	@if $level == 0 {
		box-shadow: 0 0 0 rgba(0, 0, 0, 0), 0 0 0 rgba(0, 0, 0, 0);
	} @else if $level == 1 {
		box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(12, 11, 11, 0.24);
	} @else if $level == 2 {
		box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
	} @else if $level == 3 {
		box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
	} @else if $level == 4 {
		box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
	} @else if $level == 5 {
		box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);
	} @else if $level == 9 {
		box-shadow: 0 4px 32px 0 rgba(0, 0, 0, 0.1);
	} @else if $level == 10 {
		box-shadow: 0 4px 32px 0 rgba(0, 0, 0, 0.125);
	} @else if $level == 11 {
		box-shadow: 0 4px 32px 0 rgba(0, 0, 0, 0.5);
	}
}

@mixin hidden {
	visibility: hidden;
	opacity: 0;
	&.show {
		visibility: visible;
		opacity: 1;
	}
}

@mixin visible {
	visibility: visible;
	opacity: 1;
}

@mixin gradient($from, $to) {
	background: -webkit-gradient(
		linear,
		left top,
		right bottom,
		from($from),
		to($to)
	);
	background: -moz-linear-gradient(top, $from, $to);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
}
